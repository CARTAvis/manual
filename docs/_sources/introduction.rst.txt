============
Introduction
============

Overview
--------

CARTA is the Cube Analysis and Rendering Tool for Astronomy, a new image visualization 
tool designed for the ALMA, the JVLA, and the radio telescopes of the future such as the SKA.
It adopts the server-client architecture which is suitable for visualizing images with 
large file sizes (GB to TB) easily obtained from ALMA or JVLA observations. It is practically 
difficult to process such a huge file with personal computer or laptop. Therefore, 
by adopting the server-client architecture, computation and data storage are handled 
by remote enterprise-class servers with high performance storages, while processed products 
are sent to client side only for visualization. This architecture also enables users
to interact with the ALMA and JVLA science archives by using CARTA as an interface.

CARTA has two distributions: CARTA-server and CARTA-desktop. The former is designed for 
handling large datasets as mentioned above, while the later is suitable for small datasets
which can be handled with personal computer or laptop. This document will be focusing on
the usage of the CARTA-desktop distribution. The difference of the two distributions is 
that CARTA-server distribution has an additional feature called *shared session*, which 
allows users at different places to have view and control CARTA for collaborative work 
concurrently via internet browsers such as Safari or Google Chrome. CARTA-server 
distribution is not publicly available. For people who want to use CARTA-server as the 
user interface for their image archive, please contact carta_helpdesk@asiaa.sinica.edu.tw
for more information. CARTA supports macOS and CentOS Linux operating systems. CARTA-server 
distribution is only available for Linux. Please refer to 
:ref:`link_installation_configuration` for detailed information.

CARTA provides a flexible UI layout which allows users to configure *what* functionalities
to use and *where* to place them for different science needs. The following figure is an 
example. The Section :ref:`link_about_gui` introduces this feature. Users can also use 
command lines or scripts to interact with CARTA. Examples and tutorials are given in the 
Section :ref:`link_about_python`. With the *version 0.9*, CARTA provides the following 
functionalities for image visualization and analysis:

* ``imageViewer``
* ``colormap``
* ``animator``
* ``imageZoom``
* ``imageContext``
* ``histogram``
* ``statistics``
* ``profiler``

.. _link_figure_demo_layout:

.. figure:: figures/carta_demo_screenshot.png
   
Detailed description of the functionalities is provided in Section :ref:`link_functionalities_gui`
and relevant Python commands are described in Section :ref:`link_functionalities_python`. To have an 
idea on how to interact with CARTA, we strongly recommend first-time users to follow the short hands-on 
tutorial given in Section :ref:`link_a_quick_hands_on`. 


Future plan
-----------

* Interactive CLEAN with CASA tclean task
* Channel maps
* Interactive position-velocity maps
* Moment maps
* Volume rendering
* Spatial profiler
* Virtual observatory
* Spectral line catalogue


Code contributors
-----------------

List of contributors since Feb. 2014 (as of Sep. 2017):

* Erh-Chung Chen (ASIAA)
* Cheng-Chin Chiang	(ASIAA)
* Jamie Dassoulas (University of Alberta)
* Pavol Federl (University of Calgary)
* Chia-Jung Hsu (ASIAA)
* Grimmer Kang (ASIAA)
* Susan Loveland (NRAO)
* Anthony Moraghan (ASIAA)
* Adrianna Pi≈Ñska (IDIA)
* Erik Rosolowsky (University of Alberta)
* Alex Strilets
* Ville Suoranta (NRAO)
* Jeff Taylor (University of Alberta)
* Kuo-Song Wang (ASIAA)
* Ally Wu
* Julie Yao (ASIAA)


Acknowledgement
---------------
(2014/02 ~ 2016/08) We are grateful for the support of several sponsoring organizations: 
CARTA was developed through the ALMA Development Program administered by NRAO with key 
contributions from CANARIE. Remote visualization (the Server version) relies on the PureWeb 
technology developed by Calgary Scientific.

(since 2016/08) Remote visualization (the Server version) relies on the PureWeb technology developed 
by Calgary Scientific.

